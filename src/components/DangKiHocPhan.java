package components;

import DAO.HocKiDAO;
import DAO.HocPhanDAO;
import DAO.MonHocDAO;
import hibernate.HocphanmoEntity;
import hibernate.SinhvienHocphanEntity;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

public class DangKiHocPhan extends javax.swing.JFrame implements ActionListener {

    List<SinhvienHocphanEntity> daDangKi;
    List<HocphanmoEntity> chuaDangKi;

    /**
     * Creates new form DangKiHocPhan
     */
    public DangKiHocPhan() {
        initComponents();
        daDangKi = HocPhanDAO.getHocPhanBySV(Global.sinhvien);
        updateTable();
        updateTableHocPhan();

        popupMenu1 = new JPopupMenu();
        menuItemDangKi = new JMenuItem("Đăng kí môn");
        menuItemDangKi.addActionListener(this);
        popupMenu1.add(menuItemDangKi);
        tableHocPhan.setComponentPopupMenu(popupMenu1);
        tableHocPhan.addMouseListener(new TableMouseListener(tableHocPhan));

        popupMenu2 = new JPopupMenu();
        menuItemHuyDangKi = new JMenuItem("Huỷ đăng kí môn");
        menuItemHuyDangKi.addActionListener(this);
        popupMenu2.add(menuItemHuyDangKi);
        tableDaDangKi.setComponentPopupMenu(popupMenu2);
        tableDaDangKi.addMouseListener(new TableMouseListener(tableDaDangKi));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDaDangKi = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableHocPhan = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Danh sách đã đăng kí");

        tableDaDangKi.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null}
                },
                new String [] {
                        "ID", "Mã giáo vụ", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDaDangKi);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Danh sách học phần");

        tableHocPhan.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null}
                },
                new String [] {
                        "ID", "Mã giáo vụ", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableHocPhan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(254, 254, 254)
                                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(251, 251, 251)
                                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>


    @Override
    public void actionPerformed(ActionEvent event) {
        JMenuItem menu = (JMenuItem) event.getSource();
        if (menu == menuItemDangKi) {
            int selectedRow = tableHocPhan.getSelectedRow();
            HocphanmoEntity dangki = chuaDangKi.get(selectedRow);
            if(daDangKi.size() == 8){
                JOptionPane.showMessageDialog(null, "Chỉ được đăng kí 8 học phần");
                return;
            }

            if(dangki.getSoLuong() == dangki.getDaDangKi()){
                JOptionPane.showMessageDialog(null, "Học phần đã hết chỗ");
                return;
            }

            boolean isLoop = false;
            for(SinhvienHocphanEntity svhp : daDangKi){
                if(dangki.getThu().equals(svhp.getHocphanmo().getThu())
                && dangki.getCa().equals(svhp.getHocphanmo().getCa())){
                    isLoop = true;
                    JOptionPane.showMessageDialog(null, "Học phần bị trùng ca");
                    break;
                }
            }

            if(!isLoop){
                int result = HocPhanDAO.dangKiHocPhan(chuaDangKi.get(selectedRow));
                if(result > 0){
                    JOptionPane.showMessageDialog(null, "Đăng kí thành công");
                    daDangKi = HocPhanDAO.getHocPhanBySV(Global.sinhvien);
                    HocKiDAO.setCurrentHK(Global.currentHocKy.getId());
                    updateTable();
                    updateTableHocPhan();
                } else {
                    JOptionPane.showMessageDialog(null, "Đăng kí không thành công");
                }
            }
        }else if(menu == menuItemHuyDangKi){
            int selectedRow = tableDaDangKi.getSelectedRow();
            int result = HocPhanDAO.huyDangKi(daDangKi.get(selectedRow));
            tableDaDangKi.clearSelection();
            if(result > 0){
                HocKiDAO.setCurrentHK(Global.currentHocKy.getId());
                JOptionPane.showMessageDialog(null, "Huỷ đăng kí thành công");
                daDangKi = HocPhanDAO.getHocPhanBySV(Global.sinhvien);
                HocKiDAO.setCurrentHK(Global.currentHocKy.getId());
                updateTable();
                updateTableHocPhan();
            } else {
                JOptionPane.showMessageDialog(null, "Huỷ đăng kí không thành công");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangKiHocPhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangKiHocPhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangKiHocPhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangKiHocPhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DangKiHocPhan().setVisible(true);
            }
        });
    }

    private void updateTableHocPhan(){
        chuaDangKi = new ArrayList<HocphanmoEntity>();
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        tableHocPhan.setModel(defaultTableModel);
        defaultTableModel.addColumn("Mã môn học");
        defaultTableModel.addColumn("Tên môn học");
        defaultTableModel.addColumn("Số TC");
        defaultTableModel.addColumn("Giáo viên");
        defaultTableModel.addColumn("Phòng");
        defaultTableModel.addColumn("Thời gian");
        defaultTableModel.addColumn("Ca");
        defaultTableModel.addColumn("Slot");

        List<HocphanmoEntity> hocphan = Global.currentHocKy.getHocphanmoSet().stream().toList();
        for(HocphanmoEntity hp: hocphan){
            boolean isExist = false;
            for(SinhvienHocphanEntity s: daDangKi){
                if(s.getHocphanmo().getMonhoc().getMaMonHoc().equals(hp.getMonhoc().getMaMonHoc())){
                    isExist = true;
                    break;
                }
            }
            if(!isExist){
                chuaDangKi.add(hp);
                Object[] temp = new Object[]{hp.getMonhoc().getMaMonHoc(), hp.getTenHocPhan(), hp.getMonhoc().getSoTinChi(), MonHocDAO.getTeacherByCode(hp.getMaGvlt()) , hp.getTenPhongHoc(), hp.getThu(), hp.getCa(), hp.getDaDangKi() +"/"+hp.getSoLuong()};
                defaultTableModel.addRow(temp);
            }
        }
    }


    private void updateTable(){
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        tableDaDangKi.setModel(defaultTableModel);
        defaultTableModel.addColumn("Mã môn học");
        defaultTableModel.addColumn("Tên môn học");
        defaultTableModel.addColumn("Số TC");
        defaultTableModel.addColumn("Giáo viên");
        defaultTableModel.addColumn("Phòng");
        defaultTableModel.addColumn("Thời gian");
        defaultTableModel.addColumn("Ca");
        defaultTableModel.addColumn("Slot");

        for(SinhvienHocphanEntity hp: daDangKi){
            Object[] temp = new Object[]{hp.getHocphanmo().getMonhoc().getMaMonHoc(), hp.getHocphanmo().getTenHocPhan(), hp.getHocphanmo().getMonhoc().getSoTinChi(), MonHocDAO.getTeacherByCode(hp.getHocphanmo().getMaGvlt()) , hp.getHocphanmo().getTenPhongHoc(), hp.getHocphanmo().getThu(), hp.getHocphanmo().getCa(), hp.getHocphanmo().getDaDangKi() +"/"+hp.getHocphanmo().getSoLuong()};
            defaultTableModel.addRow(temp);
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableDaDangKi;
    private javax.swing.JTable tableHocPhan;
    //Popup1
    private JPopupMenu popupMenu1;
    private JMenuItem menuItemDangKi;

    //Popup2
    private JPopupMenu popupMenu2;
    private JMenuItem menuItemHuyDangKi;
    // End of variables declaration
}
